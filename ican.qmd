# Я умею

## Базовые навыки

Как понять, что ты уже знаешь и умеешь достаточно, 
чтобы писать завершенные, пусть и в начале простые программы по Python? 

Мы составили список базовых навыков программирования, 
которые помогут тебе разобраться в этом вопросе.   

1. Я выбрал удобный редактор, который подсвечивает синтаксис языка Python.

2. Могу запустить программу на Python на своем компьютере или в удаленной среде.

3. Я знаю виды задач программирования, для которых подходит Python.

4. Я умею разбить новую задачу на составные части и описать шаги для ее решения. 
   Я могу упростить сложную задачу до минимального варианта. 

5. Я знаю базовые типы данных:
   - целое и действительное число,
   - строка,
   - булевское значение (правда/ложь).

6. Я знаю составные типы данных: 
   - список,
   - кортеж,
   - словарь.

7. Я знаю, что такое переменные и для чего они используются в программе.

8. Умею проверять условия и делать ветвление программы (if/else).

9. Я знаю, что такое циклы и как их использовать. 

10. Для работы с терминалом я умею:
   - выводить текст на экран;
   - получать текст от пользователя с клавиатуры.

11. Я умею работать с текстовыми файлами:
   - записывать данные в текстовый файл;
   - читать данные из текстового файла.

12. Я умею создавать новые функции.

13. Я интересуюсь, что такое класс, объект класса, атрибуты и методы.

14. Я умею устанавливать новые пакеты и импортировать в свой код функции и классы 
    из этих пакетов.

15. Я умею задать вопросы про исправиление или улучшение написанного мною кода. 

## Настрой программиста

Помимо изложенных выше навыков для успеха в программировании
важен положительный настрой, готовность самостоятельно 
искать и пробовать решения, совершенствовать эти решения, 
брать отвественность за неудачи и успехи. 

**Логика программы**. Синтаксис языка не так важен, как умение 
разбить задачу на части, выбрать необходимые структуры данных 
и способы работы с ними. 

**Практика.** Ничто не заменит практику.
Можно сколько угодно слушать лекции и смотреть на чужой код,
но как можно раньше нужно начать пробовать писать код
для решения новых задач "не из учебника". 

**Рефакторинг.** Программный код, который просто работает, не всегда лучший. 
Качество кода, который вы пишете, измеряется тем, насколько этот код пригоден
для решения к новых задач, понятен ли он другим программистам,
сможете ли вы сами черезх месяц легко объяснить что это код делает, удобно ли 
такой код тестировать. 

**Критерии успеха**. Помните, что даже небольшой код, который вы:

- придумали сами и попробовали при этом несколько вариантов,
- можете объяснить, почему именно на конкретном варианте отстановились,
- побороли возникающие ошибки,
- хотите этот код развивать или переиспользовать его в другом проекте,
- видите в работе этого коде пользу для себя или для других 

это отличный результат в программировании!
