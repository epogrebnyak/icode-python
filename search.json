[
  {
    "objectID": "icode/hello.html",
    "href": "icode/hello.html",
    "title": "Привет. Много приветов.",
    "section": "",
    "text": "Классическим примером короткой программы является “Привет, мир!”. Это программа из одной строки, которая печатает на экран всего одно предложение. На Python эта программа выглядит следующим образом:\nprint(\"Hello, world!\")\nВ программе используется строка \"Hello, world!\" и встроенная функция print(). Проще программы и не придумаешь!\nНа сайте Rosetta Code приведены примеры этой же программы на других языках программирования. Сравните на чем написать такую программу проще, на Python или другом языке программирования?\n\n\n\nЭтот и другие примеры вы можете не только посмотреть, но и запустить прямо на нашем сайте.\nПосле загрузки страницы вы ждете когда появится кнопка Run Code, затем нажимаете ее и сразу видите результат программы снизу.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nВы также можете изменить код программы, например, вместо \"Hello, world!\" написать \"Привет, мир!\" или передать привет на других языках.\nРанее такая интерактивная возможность использовалась, например, в базовом учебнике для языка Rust, а сейчас доступна для Python благодаря проекту pyodide.\n\n\n\nВ новом языке программирования Hare один из первых примеров – это приветствия на нескольких иностранных языках. Код на Hare выглядит следующим обарзом:\nuse fmt;\n\nexport fn main() void = {\n    const greetings = [\n        \"Hello, world!\",\n        \"¡Hola Mundo!\",\n        \"Γειά σου Κόσμε!\",\n        \"Привіт, світ!\",\n        \"こんにちは世界！\",\n    ];\n    for (let i = 0z; i &lt; len(greetings); i += 1) {\n        fmt::println(greetings[i])!;\n    };\n};\nВопросы и задания:\n\nКак такую программу напиcать на Python?\nКакие языки для приветствия вы будете использовать?\nОткуда взять официальные обозначения для этих языков?\nКакая структура данных будет использоваться для хранения приветствий?\nКак пользователь сможет выбрать язык, на котором программа напечатает приветствие?\nНа скольки языках могут поздороваться с вами студенты МГИМО?",
    "crumbs": [
      "Начини с нуля",
      "Привет. Много приветов."
    ]
  },
  {
    "objectID": "icode/hello.html#самая-простая-программа-в-мире",
    "href": "icode/hello.html#самая-простая-программа-в-мире",
    "title": "Привет. Много приветов.",
    "section": "",
    "text": "Классическим примером короткой программы является “Привет, мир!”. Это программа из одной строки, которая печатает на экран всего одно предложение. На Python эта программа выглядит следующим образом:\nprint(\"Hello, world!\")\nВ программе используется строка \"Hello, world!\" и встроенная функция print(). Проще программы и не придумаешь!\nНа сайте Rosetta Code приведены примеры этой же программы на других языках программирования. Сравните на чем написать такую программу проще, на Python или другом языке программирования?",
    "crumbs": [
      "Начини с нуля",
      "Привет. Много приветов."
    ]
  },
  {
    "objectID": "icode/hello.html#интерактивные-возможности",
    "href": "icode/hello.html#интерактивные-возможности",
    "title": "Привет. Много приветов.",
    "section": "",
    "text": "Этот и другие примеры вы можете не только посмотреть, но и запустить прямо на нашем сайте.\nПосле загрузки страницы вы ждете когда появится кнопка Run Code, затем нажимаете ее и сразу видите результат программы снизу.\n\nPlease enable JavaScript to experience the dynamic code cell content on this page.\nВы также можете изменить код программы, например, вместо \"Hello, world!\" написать \"Привет, мир!\" или передать привет на других языках.\nРанее такая интерактивная возможность использовалась, например, в базовом учебнике для языка Rust, а сейчас доступна для Python благодаря проекту pyodide.",
    "crumbs": [
      "Начини с нуля",
      "Привет. Много приветов."
    ]
  },
  {
    "objectID": "icode/hello.html#а-теперь-много-приветов",
    "href": "icode/hello.html#а-теперь-много-приветов",
    "title": "Привет. Много приветов.",
    "section": "",
    "text": "В новом языке программирования Hare один из первых примеров – это приветствия на нескольких иностранных языках. Код на Hare выглядит следующим обарзом:\nuse fmt;\n\nexport fn main() void = {\n    const greetings = [\n        \"Hello, world!\",\n        \"¡Hola Mundo!\",\n        \"Γειά σου Κόσμε!\",\n        \"Привіт, світ!\",\n        \"こんにちは世界！\",\n    ];\n    for (let i = 0z; i &lt; len(greetings); i += 1) {\n        fmt::println(greetings[i])!;\n    };\n};\nВопросы и задания:\n\nКак такую программу напиcать на Python?\nКакие языки для приветствия вы будете использовать?\nОткуда взять официальные обозначения для этих языков?\nКакая структура данных будет использоваться для хранения приветствий?\nКак пользователь сможет выбрать язык, на котором программа напечатает приветствие?\nНа скольки языках могут поздороваться с вами студенты МГИМО?",
    "crumbs": [
      "Начини с нуля",
      "Привет. Много приветов."
    ]
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "О проекте",
    "section": "",
    "text": "Этот сайт создан Евгением Погребняком и Сергеем Рощиным при содействии сотрудников, студентов, выпускников и партнеров Цифровой кафедры МГИМО.\nЗадачи сайта – снизить барьер для самостоятельного изучения программирования на Python и предложить идеи небольших, но результативных проектов, интересных, прежде всего, для студентов нетехнических специальностей."
  },
  {
    "objectID": "icode/ican.html",
    "href": "icode/ican.html",
    "title": "Я умею!",
    "section": "",
    "text": "Как понять, что ты уже знаешь и умеешь достаточно, чтобы писать завершенные, пусть по началу и достаточно простые программы на Python?\nМы составили список навыков программирования, которые помогут тебе разобраться в этом вопросе.\n\n\n\nЯ выбрал удобный редактор, который подсвечивает синтаксис языка Python.\nМогу запустить программу на Python на своем компьютере или в удаленной среде.\n\n\n\n\n\nЯ знаю виды задач, для которых подходит Python.\nЯ представляю программу как последовательно набор инструкций или блоков инструкций.\nЯ умею разбить новую задачу на составные части и описать шаги для ее решения.\nЯ могу упростить сложную задачу и предложить ее минимальный вариант.\n\n\n\n\n\nЯ знаю базовые типы данных:\n\nцелое и действительное число,\nстрока,\nбулевское значение (правда/ложь).\n\nЯ знаю составные типы данных:\n\nсписок,\nкортеж,\nсловарь.\n\nЗнаю операторы и методы применимые к типам данных выше.\nЯ знаю, что такое переменные и для чего они используются в программе.\n\n\n\n\n\nУмею проверять условия и использовать if ... else для ветвления программы.\nЯ знаю, что такое циклы while и for и как их использовать.\n\n\n\n\n\nДля работы с терминалом я умею:\n\nвыводить текст на экран,\nполучать текст от пользователя с клавиатуры.\n\nЯ умею работать с текстовыми файлами:\n\nзаписывать данные в текстовый файл,\nчитать данные из текстового файла.\n\n\n\n\n\n\nЯ умею создавать новые функции.\nМне интересно, что такое класс, объект класса, атрибуты и методы.\nЯ умею устанавливать новые пакеты и импортировать в свой код функции и классы из этих пакетов.\n\n\n\n\n\nЯ умею задать вопросы про исправление или улучшение написанного мною кода.\n\n\n\n\nПомимо изложенных выше навыков для успеха в программировании важен положительный настрой, готовность самостоятельно искать и пробовать решения, совершенствовать эти решения, брать отвественность за неудачи и за успехи.\nЛогика программы. Синтаксис языка не так важен, как умение разбить задачу на части, выбрать необходимые структуры данных и способы работы с ними.\nПрактика. Ничто не заменит практику. Можно сколько угодно слушать лекции и смотреть на чужой код, мучать вопросами ChatGPT или code-llama, но можно раньше начать писать свой код, подбирать задачи “не из учебника” – это бесценно.\nРефакторинг. Код, который просто работает, не всегда лучший. Качество кода, который вы пишете, измеряется тем, насколько этот код пригоден для решения новых задач, понятен ли он другим программистам, сможете ли вы сами через месяц легко объяснить, что это код делает, удобно ли такой код тестировать. Чаще всего первые программы, которые вы напишете, будут не очень качественные, даже если он работают.\nКритерии успеха. Помните, что даже небольшой код, который вы:\n\nпридумали сами,\nпопробовали несколько вариантов,\nможете объяснить, почему выбрали на конкретный вариант,\nпобороли возникающие ошибки,\nвидите в работе этого кода пользу для себя или для других,\nхотите этот развивать или переиспользовать этот код в других проектах\n\n– это отличный результат в программировании!"
  },
  {
    "objectID": "icode/ican.html#среда-программирования",
    "href": "icode/ican.html#среда-программирования",
    "title": "Я умею!",
    "section": "",
    "text": "Я выбрал удобный редактор, который подсвечивает синтаксис языка Python.\nМогу запустить программу на Python на своем компьютере или в удаленной среде."
  },
  {
    "objectID": "icode/ican.html#алгоритмизация",
    "href": "icode/ican.html#алгоритмизация",
    "title": "Я умею!",
    "section": "",
    "text": "Я знаю виды задач, для которых подходит Python.\nЯ представляю программу как последовательно набор инструкций или блоков инструкций.\nЯ умею разбить новую задачу на составные части и описать шаги для ее решения.\nЯ могу упростить сложную задачу и предложить ее минимальный вариант."
  },
  {
    "objectID": "icode/ican.html#значения-типы-переменные",
    "href": "icode/ican.html#значения-типы-переменные",
    "title": "Я умею!",
    "section": "",
    "text": "Я знаю базовые типы данных:\n\nцелое и действительное число,\nстрока,\nбулевское значение (правда/ложь).\n\nЯ знаю составные типы данных:\n\nсписок,\nкортеж,\nсловарь.\n\nЗнаю операторы и методы применимые к типам данных выше.\nЯ знаю, что такое переменные и для чего они используются в программе."
  },
  {
    "objectID": "icode/ican.html#ход-исполнения-программы",
    "href": "icode/ican.html#ход-исполнения-программы",
    "title": "Я умею!",
    "section": "",
    "text": "Умею проверять условия и использовать if ... else для ветвления программы.\nЯ знаю, что такое циклы while и for и как их использовать."
  },
  {
    "objectID": "icode/ican.html#ввод-и-вывод",
    "href": "icode/ican.html#ввод-и-вывод",
    "title": "Я умею!",
    "section": "",
    "text": "Для работы с терминалом я умею:\n\nвыводить текст на экран,\nполучать текст от пользователя с клавиатуры.\n\nЯ умею работать с текстовыми файлами:\n\nзаписывать данные в текстовый файл,\nчитать данные из текстового файла."
  },
  {
    "objectID": "icode/ican.html#функции-классы-пакеты",
    "href": "icode/ican.html#функции-классы-пакеты",
    "title": "Я умею!",
    "section": "",
    "text": "Я умею создавать новые функции.\nМне интересно, что такое класс, объект класса, атрибуты и методы.\nЯ умею устанавливать новые пакеты и импортировать в свой код функции и классы из этих пакетов."
  },
  {
    "objectID": "icode/ican.html#коммуникации",
    "href": "icode/ican.html#коммуникации",
    "title": "Я умею!",
    "section": "",
    "text": "Я умею задать вопросы про исправление или улучшение написанного мною кода."
  },
  {
    "objectID": "icode/ican.html#настрой-настоящего-программиста",
    "href": "icode/ican.html#настрой-настоящего-программиста",
    "title": "Я умею!",
    "section": "",
    "text": "Помимо изложенных выше навыков для успеха в программировании важен положительный настрой, готовность самостоятельно искать и пробовать решения, совершенствовать эти решения, брать отвественность за неудачи и за успехи.\nЛогика программы. Синтаксис языка не так важен, как умение разбить задачу на части, выбрать необходимые структуры данных и способы работы с ними.\nПрактика. Ничто не заменит практику. Можно сколько угодно слушать лекции и смотреть на чужой код, мучать вопросами ChatGPT или code-llama, но можно раньше начать писать свой код, подбирать задачи “не из учебника” – это бесценно.\nРефакторинг. Код, который просто работает, не всегда лучший. Качество кода, который вы пишете, измеряется тем, насколько этот код пригоден для решения новых задач, понятен ли он другим программистам, сможете ли вы сами через месяц легко объяснить, что это код делает, удобно ли такой код тестировать. Чаще всего первые программы, которые вы напишете, будут не очень качественные, даже если он работают.\nКритерии успеха. Помните, что даже небольшой код, который вы:\n\nпридумали сами,\nпопробовали несколько вариантов,\nможете объяснить, почему выбрали на конкретный вариант,\nпобороли возникающие ошибки,\nвидите в работе этого кода пользу для себя или для других,\nхотите этот развивать или переиспользовать этот код в других проектах\n\n– это отличный результат в программировании!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Mgimo-python",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites.",
    "crumbs": [
      "Начини с нуля",
      "Mgimo-python"
    ]
  }
]